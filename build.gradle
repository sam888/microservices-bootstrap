plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'

    // uncomment this when using git
    // id "com.gorylenko.gradle-git-properties" version "2.4.1"  // Generate git Info at /actuator/info
}

// Uncomment this and 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml' below for parsing xml
//
// dependencyManagement {
//    imports {
//        mavenBom "com.fasterxml.jackson:jackson-bom:2.18.2"
//    }
// }


group = 'com.microservices.bootstrap'
version = '0.0.1'

// https://spring.io/blog/2023/09/09/all-together-now-spring-boot-3-2-graalvm-native-images-java-21-and-virtual
/*
java {
    sourceCompatibility = '21'
    toolchain {languageVersion = JavaLanguageVersion.of( 21 ) }
}
*/

compileJava {
    options.encoding = 'UTF-8'
    options.deprecation = true  // Show deprecated details
    options.release = 17
}

repositories {
    mavenCentral()
}


jar {
    archiveFileName = 'microservices-bootstrap.jar'
    // https://docs.gradle.org/current/dsl/org.gradle.api.tasks.bundling.Jar.html
    manifest {
        attributes 'Main-Class': 'com.microservices.bootstrap.MainApplication'
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

springBoot {
    buildInfo() // Same as executing build-info goal of Spring Boot Maven Plugin, i.e. artifactId spring-boot-maven-plugin
}


tasks.named('bootJar') {
    launchScript()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework:spring-context'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'

    // https://docs.spring.io/spring-boot/docs/current/reference/html/configuration-metadata.html
    // Only required when using @ConfigurationProperties
    // annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // For sending email
    implementation 'org.springframework:spring-context-support'
    implementation 'org.springframework.boot:spring-boot-starter-mail'


    // Validate email address
    implementation 'commons-validator:commons-validator:1.9.0'

    implementation 'org.apache.commons:commons-lang3:3.13.0'
    implementation group: 'com.auth0', name: 'java-jwt', version: '4.5.0'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.16.0'

    // implementation 'net.lingala.zip4j:zip4j:2.11.5'                            // Zipping file
    // implementation 'com.pivovarit:throwing-function:1.5.1'                     // Throw exception within lambda
    // implementation group: 'org.passay', name: 'passay', version: '1.6.2'       // Enforcing password rules
    // implementation 'org.apache.commons:commons-text:1.10.0'
    // implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'   // Parsing XML

    compileOnly 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    compileOnly("org.springframework.boot:spring-boot-devtools")


    // Mock test
    // implementation 'com.squareup.okhttp3:mockwebserver'

    // Spring boot and Reactor tests
    testImplementation('org.springframework.boot:spring-boot-starter-test')  {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    // testImplementation 'org.springframework.security:spring-security-test'
    // testImplementation 'io.projectreactor:reactor-test'

    // JUnit 5, update to latest as required
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
}

/*
test {
    useJUnitPlatform()
}
 */
